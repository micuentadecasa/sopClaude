#!/bin/bash

# claude-define - Stage 1: Generate agent definition from use case

echo "🚀 Starting Stage 1: Define Agent Scope and Scenarios"
echo "=================================================="

# Create output directories
mkdir -p output/stage1-define/{scenarios,review}

# Check if input exists
if [ ! -f "input/use-case.md" ]; then
    echo "❌ Error: Please create input/use-case.md with your use case description"
    echo "         See instructions.md for examples"
    exit 1
fi

echo "📖 Reading use case from input/use-case.md"
echo ""

# Step 1: Generate agent scope
echo "🔍 Analyzing use case and defining agent scope..."
claude --no-interactive \
  --prompt "$(cat prompts/define-scope-prompt.md)" \
  --context input/use-case.md \
  > output/stage1-define/agent-scope.md

if [ $? -eq 0 ]; then
    echo "✅ Agent scope defined successfully"
else
    echo "❌ Error generating agent scope"
    exit 1
fi

# Step 2: Generate scenarios
echo ""
echo "📝 Generating concrete scenarios..."
claude --no-interactive \
  --prompt "$(cat prompts/define-scenarios-prompt.md)" \
  --context output/stage1-define/agent-scope.md \
  --context input/use-case.md \
  > output/stage1-define/scenarios/all-scenarios.md

if [ $? -eq 0 ]; then
    echo "✅ Scenarios generated successfully"
else
    echo "❌ Error generating scenarios"
    exit 1
fi

# Step 3: Split scenarios into individual files
echo ""
echo "📄 Creating individual scenario files..."
# Extract and save individual scenarios
claude --no-interactive \
  --prompt "Split the scenarios into individual numbered files. For each scenario, create a separate markdown file with the scenario number, title, description, success criteria, and edge cases. Output format: SCENARIO_001: [content] SCENARIO_002: [content] etc." \
  --context output/stage1-define/scenarios/all-scenarios.md \
  > output/stage1-define/scenarios/split-temp.txt

# Parse and create individual files
i=1
while IFS= read -r line; do
    if [[ $line == SCENARIO_* ]]; then
        scenario_num=$(printf "%03d" $i)
        scenario_file="output/stage1-define/scenarios/scenario-${scenario_num}.md"
        echo "${line#*: }" > "$scenario_file"
        ((i++))
    fi
done < output/stage1-define/scenarios/split-temp.txt

rm -f output/stage1-define/scenarios/split-temp.txt
echo "✅ Created $((i-1)) scenario files"

# Step 4: Generate quality review
echo ""
echo "🔍 Running quality review..."
claude --no-interactive \
  --prompt "$(cat prompts/define-review-prompt.md)" \
  --context output/stage1-define/agent-scope.md \
  --context output/stage1-define/scenarios/all-scenarios.md \
  > output/stage1-define/review/stage1-review.md

if [ $? -eq 0 ]; then
    echo "✅ Quality review completed"
else
    echo "❌ Error generating review"
    exit 1
fi

# Step 5: Create tracking file
echo ""
echo "📊 Creating progress tracking..."
cat > output/stage1-define/.tracking.json << EOF
{
  "stage": "define",
  "status": "completed",
  "timestamp": "$(date -u +"%Y-%m-%dT%H:%M:%SZ")",
  "outputs": {
    "agent_scope": "output/stage1-define/agent-scope.md",
    "scenarios": "output/stage1-define/scenarios/",
    "review": "output/stage1-define/review/stage1-review.md"
  }
}
EOF

echo ""
echo "✨ Stage 1 complete!"
echo ""
echo "📁 Output files created:"
echo "   - output/stage1-define/agent-scope.md"
echo "   - output/stage1-define/scenarios/*.md"
echo "   - output/stage1-define/review/stage1-review.md"
echo ""
echo "Next step: Run ./claude-design to create the SOP"