#!/bin/bash

# claude-design - Stage 2: Create Standard Operating Procedure from agent definition

echo "🚀 Starting Stage 2: Design Standard Operating Procedure"
echo "======================================================"

# Check if stage 1 outputs exist
if [ ! -f "output/stage1-define/agent-scope.md" ]; then
    echo "❌ Error: Stage 1 outputs not found"
    echo "         Please run ./claude-define first"
    exit 1
fi

# Create output directories
mkdir -p output/stage2-design/{sop,review}

echo "📖 Reading Stage 1 outputs..."
echo ""

# Step 1: Analyze workflows from scenarios
echo "🔍 Analyzing workflow patterns..."
claude --no-interactive \
  --prompt "$(cat prompts/design-workflow-prompt.md)" \
  --context output/stage1-define/agent-scope.md \
  --context output/stage1-define/scenarios/all-scenarios.md \
  > output/stage2-design/workflow-analysis.md

if [ $? -eq 0 ]; then
    echo "✅ Workflow analysis completed"
else
    echo "❌ Error analyzing workflows"
    exit 1
fi

# Step 2: Generate main SOP workflow
echo ""
echo "📝 Generating main workflow SOP..."
claude --no-interactive \
  --prompt "$(cat prompts/design-sop-prompt.md)" \
  --context output/stage2-design/workflow-analysis.md \
  --context output/stage1-define/agent-scope.md \
  > output/stage2-design/sop/main-workflow.md

if [ $? -eq 0 ]; then
    echo "✅ Main workflow SOP created"
else
    echo "❌ Error generating main workflow"
    exit 1
fi

# Step 3: Generate decision trees
echo ""
echo "🌳 Creating decision trees..."
claude --no-interactive \
  --prompt "$(cat prompts/design-decisions-prompt.md)" \
  --context output/stage2-design/sop/main-workflow.md \
  --context output/stage1-define/scenarios/all-scenarios.md \
  > output/stage2-design/sop/decision-trees.md

if [ $? -eq 0 ]; then
    echo "✅ Decision trees created"
else
    echo "❌ Error generating decision trees"
    exit 1
fi

# Step 4: Generate error handling procedures
echo ""
echo "⚠️  Defining error handling procedures..."
claude --no-interactive \
  --prompt "$(cat prompts/design-errors-prompt.md)" \
  --context output/stage2-design/sop/main-workflow.md \
  --context output/stage1-define/scenarios/all-scenarios.md \
  > output/stage2-design/sop/error-handling.md

if [ $? -eq 0 ]; then
    echo "✅ Error handling procedures defined"
else
    echo "❌ Error generating error procedures"
    exit 1
fi

# Step 5: Design integrations
echo ""
echo "🔌 Designing integration specifications..."
claude --no-interactive \
  --prompt "$(cat prompts/design-integrations-prompt.md)" \
  --context output/stage1-define/agent-scope.md \
  --context output/stage2-design/sop/main-workflow.md \
  > output/stage2-design/integrations.md

if [ $? -eq 0 ]; then
    echo "✅ Integration specifications created"
else
    echo "❌ Error designing integrations"
    exit 1
fi

# Step 6: Optimize and consolidate SOP
echo ""
echo "⚡ Optimizing SOP for efficiency..."
claude --no-interactive \
  --prompt "$(cat prompts/design-optimize-prompt.md)" \
  --context output/stage2-design/sop/main-workflow.md \
  --context output/stage2-design/sop/decision-trees.md \
  --context output/stage2-design/sop/error-handling.md \
  > output/stage2-design/sop/optimized-sop.md

if [ $? -eq 0 ]; then
    echo "✅ SOP optimization completed"
else
    echo "❌ Error optimizing SOP"
    exit 1
fi

# Step 7: Generate quality review
echo ""
echo "🔍 Running quality review..."
claude --no-interactive \
  --prompt "$(cat prompts/design-review-prompt.md)" \
  --context output/stage2-design/sop/main-workflow.md \
  --context output/stage2-design/sop/decision-trees.md \
  --context output/stage2-design/sop/error-handling.md \
  --context output/stage2-design/integrations.md \
  > output/stage2-design/review/stage2-review.md

if [ $? -eq 0 ]; then
    echo "✅ Quality review completed"
else
    echo "❌ Error generating review"
    exit 1
fi

# Step 8: Create tracking file
echo ""
echo "📊 Creating progress tracking..."
cat > output/stage2-design/.tracking.json << EOF
{
  "stage": "design",
  "status": "completed",
  "timestamp": "$(date -u +"%Y-%m-%dT%H:%M:%SZ")",
  "outputs": {
    "workflow_analysis": "output/stage2-design/workflow-analysis.md",
    "main_workflow": "output/stage2-design/sop/main-workflow.md",
    "decision_trees": "output/stage2-design/sop/decision-trees.md",
    "error_handling": "output/stage2-design/sop/error-handling.md",
    "integrations": "output/stage2-design/integrations.md",
    "optimized_sop": "output/stage2-design/sop/optimized-sop.md",
    "review": "output/stage2-design/review/stage2-review.md"
  }
}
EOF

# Clean up temporary analysis file
rm -f output/stage2-design/workflow-analysis.md

echo ""
echo "✨ Stage 2 complete!"
echo ""
echo "📁 Output files created:"
echo "   - output/stage2-design/sop/main-workflow.md"
echo "   - output/stage2-design/sop/decision-trees.md"
echo "   - output/stage2-design/sop/error-handling.md"
echo "   - output/stage2-design/sop/optimized-sop.md"
echo "   - output/stage2-design/integrations.md"
echo "   - output/stage2-design/review/stage2-review.md"
echo ""
echo "Next step: Run ./claude-build to create the implementation"